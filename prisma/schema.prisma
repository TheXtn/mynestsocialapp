generator client {
  provider   = "prisma-client-js"
  engineType = "binary"
  binaryTargets=["windows"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model item {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  title     String?
  desc      String
  author    user      @relation(references: [id], fields: [authorId], onDelete: Cascade)
  authorId  String    @db.ObjectId
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     like[]
  comments  comment[]
}

model user {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String?   @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  items     item[]
  likes     like[]
  comments  comment[]
  role role @default(BASIC)
}

model like {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  likerId      String   @db.ObjectId
  originItemId String   @db.ObjectId
  liker        user     @relation(references: [id], fields: [likerId], onDelete: Cascade)
  originItem   item     @relation(references: [id], fields: [originItemId], onDelete: Cascade)
}

model comment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  body         String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  authorId     String   @db.ObjectId
  originItemId String   @db.ObjectId
  author       user     @relation(references: [id], fields: [authorId], onDelete: Cascade)
  originItem   item     @relation(references: [id], fields: [originItemId], onDelete: Cascade)
}
enum role {
  BASIC
  ADMIN
}